Варіант №1

Проєкт містить 2 файли - Main.java, Multiply.java.

Main.java містить у собі головну функцію main яка містить взаємодію з користувачем, створення і заповнення випадковими числами масиву (об’єкту класу CopyOnWriteArrayList).

Multiply.java містить у собі внутрішній клас MultiplyTask який реалізує інтерфейс Callable (Callable<CopyOnWriteArrayList<Integer>>) і виконується для виконання операції множення фрагмента масиву і повертає
CopyOnWriteArrayList<Integer>.
Також Multiply.java містить метод для отримання CopyOnWriteArrayList<Integer> з домноженими елементами - getMultiplied, з зазначеною кількістю потоків і з автоматичним розпізнаванням кількості потоків (буде використано кількість потоків які доступні JVM).
Future використано для збору результатів в 1 масив.
Розмір масиву і множник користувач вводить з клавіатури.
В кінці програми виводиться повний час роботи програми і час виконання операції множення (при маленькому розміру масиву найбільше часу йде на створення потоків).
У якості executorа використовувався newFixedThreadPool для паралельного виконання домноження фрагментів масиву з заданою кількістю потоків.
isDone використовується у програмі для перевірки того чи процес було виконано, інакше очікується його завершення.
isCancelled використовується для перевірки того чи було процес скасовано, у цьому випадку викидається виключення.
